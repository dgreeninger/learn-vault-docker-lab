[0m[1mInitializing the backend...[0m
[0m[1mInitializing provider plugins...[0m
- Reusing previous version of kreuzwerker/docker from the dependency lock file
- Using previously-installed kreuzwerker/docker v3.0.2

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # docker_container.vault-docker-lab-prometheus[0m will be created
[0m  [32m+[0m[0m resource "docker_container" "vault-docker-lab-prometheus" {
      [32m+[0m[0m attach                                      = false
      [32m+[0m[0m bridge                                      = (known after apply)
      [32m+[0m[0m command                                     = (known after apply)
      [32m+[0m[0m container_logs                              = (known after apply)
      [32m+[0m[0m container_read_refresh_timeout_milliseconds = 15000
      [32m+[0m[0m entrypoint                                  = (known after apply)
      [32m+[0m[0m env                                         = (known after apply)
      [32m+[0m[0m exit_code                                   = (known after apply)
      [32m+[0m[0m hostname                                    = "prometheus"
      [32m+[0m[0m id                                          = (known after apply)
      [32m+[0m[0m image                                       = (known after apply)
      [32m+[0m[0m init                                        = (known after apply)
      [32m+[0m[0m ipc_mode                                    = (known after apply)
      [32m+[0m[0m log_driver                                  = (known after apply)
      [32m+[0m[0m logs                                        = false
      [32m+[0m[0m must_run                                    = true
      [32m+[0m[0m name                                        = "prometheus"
      [32m+[0m[0m network_data                                = (known after apply)
      [32m+[0m[0m read_only                                   = false
      [32m+[0m[0m remove_volumes                              = true
      [32m+[0m[0m restart                                     = "no"
      [32m+[0m[0m rm                                          = false
      [32m+[0m[0m runtime                                     = (known after apply)
      [32m+[0m[0m security_opts                               = (known after apply)
      [32m+[0m[0m shm_size                                    = (known after apply)
      [32m+[0m[0m start                                       = true
      [32m+[0m[0m stdin_open                                  = false
      [32m+[0m[0m stop_signal                                 = (known after apply)
      [32m+[0m[0m stop_timeout                                = (known after apply)
      [32m+[0m[0m tty                                         = false
      [32m+[0m[0m wait                                        = false
      [32m+[0m[0m wait_timeout                                = 60

      [32m+[0m[0m healthcheck (known after apply)

      [32m+[0m[0m labels (known after apply)

      [32m+[0m[0m networks_advanced {
          [32m+[0m[0m aliases      = []
          [32m+[0m[0m ipv4_address = "10.1.42.201"
          [32m+[0m[0m name         = "vault_docker_lab_network"
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m ports {
          [32m+[0m[0m external = 9090
          [32m+[0m[0m internal = 9090
          [32m+[0m[0m ip       = "0.0.0.0"
          [32m+[0m[0m protocol = "tcp"
        }

      [32m+[0m[0m volumes {
          [32m+[0m[0m container_path = "/etc/prometheus/prometheus-token"
          [32m+[0m[0m host_path      = "/Users/brian/tmp/learn-vault-docker-lab/prometheus/prometheus-token"
            [90m# (2 unchanged attributes hidden)[0m[0m
        }
      [32m+[0m[0m volumes {
          [32m+[0m[0m container_path = "/etc/prometheus/prometheus.yml"
          [32m+[0m[0m host_path      = "/Users/brian/tmp/learn-vault-docker-lab/prometheus/prometheus.yml"
            [90m# (2 unchanged attributes hidden)[0m[0m
        }
    }

[1m  # docker_image.prometheus[0m will be created
[0m  [32m+[0m[0m resource "docker_image" "prometheus" {
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m image_id     = (known after apply)
      [32m+[0m[0m keep_locally = true
      [32m+[0m[0m name         = "prom/prometheus:latest"
      [32m+[0m[0m repo_digest  = (known after apply)
    }

[1mPlan:[0m 2 to add, 0 to change, 0 to destroy.
[0m[0m[1mdocker_image.prometheus: Creating...[0m[0m
[0m[1mdocker_image.prometheus: Creation complete after 0s [id=sha256:a6c68ce6b1498a5ba946bf25468aa23306ed71adf34e98c8431177e6868b7367prom/prometheus:latest][0m
[0m[1mdocker_container.vault-docker-lab-prometheus: Creating...[0m[0m
[0m[1mdocker_container.vault-docker-lab-prometheus: Creation complete after 0s [id=5a0bb61a879e4f7bda80645f20a793ca7edd4f375d07267748184e963f6c3032][0m
[0m[1m[32m
Apply complete! Resources: 2 added, 0 changed, 0 destroyed.
[0m[0m[1mdocker_image.prometheus: Refreshing state... [id=sha256:a6c68ce6b1498a5ba946bf25468aa23306ed71adf34e98c8431177e6868b7367prom/prometheus:latest][0m
[0m[1mdocker_container.vault-docker-lab-prometheus: Refreshing state... [id=5a0bb61a879e4f7bda80645f20a793ca7edd4f375d07267748184e963f6c3032][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [31m-[0m destroy[0m

Terraform will perform the following actions:

[1m  # docker_container.vault-docker-lab-prometheus[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "docker_container" "vault-docker-lab-prometheus" {
      [31m-[0m[0m attach                                      = false [90m-> null[0m[0m
      [31m-[0m[0m command                                     = [
          [31m-[0m[0m "--config.file=/etc/prometheus/prometheus.yml",
          [31m-[0m[0m "--storage.tsdb.path=/prometheus",
          [31m-[0m[0m "--web.console.libraries=/usr/share/prometheus/console_libraries",
          [31m-[0m[0m "--web.console.templates=/usr/share/prometheus/consoles",
        ] [90m-> null[0m[0m
      [31m-[0m[0m container_read_refresh_timeout_milliseconds = 15000 [90m-> null[0m[0m
      [31m-[0m[0m cpu_shares                                  = 0 [90m-> null[0m[0m
      [31m-[0m[0m dns                                         = [] [90m-> null[0m[0m
      [31m-[0m[0m dns_opts                                    = [] [90m-> null[0m[0m
      [31m-[0m[0m dns_search                                  = [] [90m-> null[0m[0m
      [31m-[0m[0m entrypoint                                  = [
          [31m-[0m[0m "/bin/prometheus",
        ] [90m-> null[0m[0m
      [31m-[0m[0m env                                         = [] [90m-> null[0m[0m
      [31m-[0m[0m group_add                                   = [] [90m-> null[0m[0m
      [31m-[0m[0m hostname                                    = "prometheus" [90m-> null[0m[0m
      [31m-[0m[0m id                                          = "5a0bb61a879e4f7bda80645f20a793ca7edd4f375d07267748184e963f6c3032" [90m-> null[0m[0m
      [31m-[0m[0m image                                       = "sha256:a6c68ce6b1498a5ba946bf25468aa23306ed71adf34e98c8431177e6868b7367" [90m-> null[0m[0m
      [31m-[0m[0m init                                        = false [90m-> null[0m[0m
      [31m-[0m[0m ipc_mode                                    = "private" [90m-> null[0m[0m
      [31m-[0m[0m log_driver                                  = "json-file" [90m-> null[0m[0m
      [31m-[0m[0m log_opts                                    = {} [90m-> null[0m[0m
      [31m-[0m[0m logs                                        = false [90m-> null[0m[0m
      [31m-[0m[0m max_retry_count                             = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory                                      = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory_swap                                 = 0 [90m-> null[0m[0m
      [31m-[0m[0m must_run                                    = true [90m-> null[0m[0m
      [31m-[0m[0m name                                        = "prometheus" [90m-> null[0m[0m
      [31m-[0m[0m network_data                                = [
          [31m-[0m[0m {
              [31m-[0m[0m gateway                   = "10.1.42.1"
              [31m-[0m[0m global_ipv6_prefix_length = 0
              [31m-[0m[0m ip_address                = "10.1.42.201"
              [31m-[0m[0m ip_prefix_length          = 24
              [31m-[0m[0m mac_address               = "02:42:0a:01:2a:c9"
              [31m-[0m[0m network_name              = "vault_docker_lab_network"
                [90m# (2 unchanged attributes hidden)[0m[0m
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m network_mode                                = "bridge" [90m-> null[0m[0m
      [31m-[0m[0m privileged                                  = false [90m-> null[0m[0m
      [31m-[0m[0m publish_all_ports                           = false [90m-> null[0m[0m
      [31m-[0m[0m read_only                                   = false [90m-> null[0m[0m
      [31m-[0m[0m remove_volumes                              = true [90m-> null[0m[0m
      [31m-[0m[0m restart                                     = "no" [90m-> null[0m[0m
      [31m-[0m[0m rm                                          = false [90m-> null[0m[0m
      [31m-[0m[0m runtime                                     = "runc" [90m-> null[0m[0m
      [31m-[0m[0m security_opts                               = [] [90m-> null[0m[0m
      [31m-[0m[0m shm_size                                    = 64 [90m-> null[0m[0m
      [31m-[0m[0m start                                       = true [90m-> null[0m[0m
      [31m-[0m[0m stdin_open                                  = false [90m-> null[0m[0m
      [31m-[0m[0m stop_timeout                                = 0 [90m-> null[0m[0m
      [31m-[0m[0m storage_opts                                = {} [90m-> null[0m[0m
      [31m-[0m[0m sysctls                                     = {} [90m-> null[0m[0m
      [31m-[0m[0m tmpfs                                       = {} [90m-> null[0m[0m
      [31m-[0m[0m tty                                         = false [90m-> null[0m[0m
      [31m-[0m[0m user                                        = "nobody" [90m-> null[0m[0m
      [31m-[0m[0m wait                                        = false [90m-> null[0m[0m
      [31m-[0m[0m wait_timeout                                = 60 [90m-> null[0m[0m
      [31m-[0m[0m working_dir                                 = "/prometheus" [90m-> null[0m[0m
        [90m# (6 unchanged attributes hidden)[0m[0m

      [31m-[0m[0m networks_advanced {
          [31m-[0m[0m aliases      = [] [90m-> null[0m[0m
          [31m-[0m[0m ipv4_address = "10.1.42.201" [90m-> null[0m[0m
          [31m-[0m[0m name         = "vault_docker_lab_network" [90m-> null[0m[0m
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [31m-[0m[0m ports {
          [31m-[0m[0m external = 9090 [90m-> null[0m[0m
          [31m-[0m[0m internal = 9090 [90m-> null[0m[0m
          [31m-[0m[0m ip       = "0.0.0.0" [90m-> null[0m[0m
          [31m-[0m[0m protocol = "tcp" [90m-> null[0m[0m
        }

      [31m-[0m[0m volumes {
          [31m-[0m[0m container_path = "/etc/prometheus/prometheus-token" [90m-> null[0m[0m
          [31m-[0m[0m host_path      = "/Users/brian/tmp/learn-vault-docker-lab/prometheus/prometheus-token" [90m-> null[0m[0m
          [31m-[0m[0m read_only      = false [90m-> null[0m[0m
            [90m# (2 unchanged attributes hidden)[0m[0m
        }
      [31m-[0m[0m volumes {
          [31m-[0m[0m container_path = "/etc/prometheus/prometheus.yml" [90m-> null[0m[0m
          [31m-[0m[0m host_path      = "/Users/brian/tmp/learn-vault-docker-lab/prometheus/prometheus.yml" [90m-> null[0m[0m
          [31m-[0m[0m read_only      = false [90m-> null[0m[0m
            [90m# (2 unchanged attributes hidden)[0m[0m
        }
    }

[1m  # docker_image.prometheus[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "docker_image" "prometheus" {
      [31m-[0m[0m id           = "sha256:a6c68ce6b1498a5ba946bf25468aa23306ed71adf34e98c8431177e6868b7367prom/prometheus:latest" [90m-> null[0m[0m
      [31m-[0m[0m image_id     = "sha256:a6c68ce6b1498a5ba946bf25468aa23306ed71adf34e98c8431177e6868b7367" [90m-> null[0m[0m
      [31m-[0m[0m keep_locally = true [90m-> null[0m[0m
      [31m-[0m[0m name         = "prom/prometheus:latest" [90m-> null[0m[0m
      [31m-[0m[0m repo_digest  = "prom/prometheus@sha256:f20d3127bf2876f4a1df76246fca576b41ddf1125ed1c546fbd8b16ea55117e6" [90m-> null[0m[0m
    }

[1mPlan:[0m 0 to add, 0 to change, 2 to destroy.
[0m[0m[1mdocker_container.vault-docker-lab-prometheus: Destroying... [id=5a0bb61a879e4f7bda80645f20a793ca7edd4f375d07267748184e963f6c3032][0m[0m
[0m[1mdocker_container.vault-docker-lab-prometheus: Destruction complete after 0s[0m
[0m[1mdocker_image.prometheus: Destroying... [id=sha256:a6c68ce6b1498a5ba946bf25468aa23306ed71adf34e98c8431177e6868b7367prom/prometheus:latest][0m[0m
[0m[1mdocker_image.prometheus: Destruction complete after 0s[0m
[0m[1m[32m
Destroy complete! Resources: 2 destroyed.
[0m
[0m[1m[32mNo changes.[0m[1m No objects need to be destroyed.[0m

[0mEither you have not created any objects yet or the existing objects were
already deleted outside of Terraform.
[0m[1m[32m
Destroy complete! Resources: 0 destroyed.
[0m